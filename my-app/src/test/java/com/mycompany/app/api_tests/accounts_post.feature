# ********RoostGPT********

# Test generated by RoostGPT for test karateTest using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /accounts_post for http method type POST 
# RoostTestHash=53e96f9805
# 
# 

# ********RoostGPT********
Feature: Create new Account

  Background: 
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
    * url urlBase
    * def AUTH_TOKEN = karate.properties['AUTH_TOKEN']
    * def headers = { 'commit-hash': '#(^$|^[a-z0-9]{7}$)', 'Authorization': '#(' + AUTH_TOKEN + ')' }
  
  Scenario Outline: Verify Account Creation by Testing POST /accounts endpoint
    Given path '/accounts'
    And headers headers
    And request { email: '<email>' }
    When method post
    Then match responseStatus == <statusCode>
    And match responseHeaders contains { 'api-version': '#string', 'commit-hash': '#string' }
    * def responseSchema = karate.get('responseSchema')
    And match response == responseSchema

    Examples:
    
      | email                     | statusCode | responseSchema                                                                                |
      | 'test@test.com'           |        201 | {}                                                                                            |
      
      | 'invalid_email_format'    |        400 | { error: 'validation/email-pattern', description: '#string', value: '#null', field: 'email' } |
      
      | 'missing_email_parameter' |        400 | { error: 'error/code', description: 'Descriptive Error Message' }                             |
